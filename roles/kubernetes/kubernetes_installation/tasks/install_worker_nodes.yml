- name: copy rpm files to target machine
  include_role:
    name: roles/kubernetes/helpers
    tasks_from: installers_to_target
  vars:
    needed_files: "{{kubernetes_rpm_files}}"
    copy_to: "{{kubernetes_tmp_downloads}}/kubernetes_rpm_files"
    copy_from: "{{kubernetes_installables_dir}}/rpm_packages/kubeadm"

- name: Disable SWAP since kubernetes can't work with swap enabled (1/2)
  shell: swapoff -a
  become: true

- name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
  replace:
    path: /etc/fstab
    regexp: '^(.+?\sswap\s+swap\s+.*)$'
    replace: '# \1'
  become: true

- name: install kubernetes needed packages from rpm files
  include_role:
    name: roles/kubernetes/helpers
    tasks_from: yum_install_packages
  vars:
    packages: "{{kubernetes_rpm_files}}"
    packages_location: "{{kubernetes_tmp_downloads}}/kubernetes_rpm_files"

- name: enable kubernetes service so it survives reboots
  service:
    name: kubelet
    enabled: yes
  become: true


- name: "copy registry's public certificate to target machine: /etc/pki/ca-trust/source/anchors"
  include_role:
    name: roles/kubernetes/helpers
    tasks_from: installers_to_target
    apply:
      become: true
  vars:
    needed_files:
      - "{{certificate}}" #this the first entry in the docker registry certificate list found in /roles/kubernetes/docker/docker_registry/defaults/main.yml, default value: private_reg.cert
    copy_to: "/etc/pki/ca-trust/source/anchors"
    copy_from: "{{certs_home_directory}}"
  

- name: "update ca trust extract"
  command: update-ca-trust extract
  become: true

- name: restart docker to update docker's trusted certificates
  service:
    name: docker
    state: restarted
  become: true

- name: Logging in to Docker private registry and updating local config file
  docker_login:
    username: "{{docker_registry_username}}"
    password: "{{docker_registry_password}}"
    registry: "{{docker_registry_ip}}:{{docker_registry_port}}"
  become: true

- name: debug join token
  debug:
    var: "kubeadm_join_command"

- name: kubeadm reset in case of previous failed installation
  command: "kubeadm reset -f "
  become: true

- name: make sure /var/lib/kubelet exists
  file:
    path: "/var/lib/kubelet"
    state: directory
    owner: "{{ansible_user_id}}"
    group: "{{ansible_group_id}}"
  become: true

- name: copy docker config.json to allow kubeadm login to the registry
  copy:
    src: "/root/.docker/config.json"
    dest: "/var/lib/kubelet"
    remote_src: yes
  become: true

- name: "cleanup previous kubernetes installation if any"
  file:
    path: "$HOME/.kube"
    state: absent

- name: commands to use kubectl 1 of 2
  file:
    path: "/home/{{ansible_user_id }}/.kube"
    state: directory
    owner: "{{ansible_user_id}}"
    group: "{{ansible_group_id}}"
  become : true

- name: commands to use kubectl 2 of 2
  copy:
    dest: "$HOME/.kube/config"
    src: "{{ inventory_dir}}/cluster_configuration_file_auto_generated"

- name: join cluster
  command: "{{kubeadm_join_command}}"
  become: true

- name: "remove urllib3 to fix duplicity version conflict"
  command: "pip uninstall urllib3 -y"
  become: true

- name: "remove urllib3 to fix duplicity version conflict"
  command: "yum install python-urllib3 -y"
  become: true
